``4-print_square`` module test
================================

Using ``print_square`` function
-------------------------------

This text file contains test cases for the function ``print_square``.
The function is supposed to print a square.
First import function to the varaible print_square:
    
    >>> print_square = __import__('4-print_square').print_square

Now use it:

Test_0 size is 4
----------------------------------------------
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test_1 size is 0
----------------------------------------------
    >>> print_square(0)
    

Test_2 size parameter is a string
-----------------------------------------
    >>> print_square("3")
    Traceback (most recent call last):
    TypeError: size must be an integer

Test_3 size parameter must be greater or equal to 0
---------------------------------------------------
    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Test_4 size parameter is float and less than 0
----------------------------------------------
    >>> print_square(-1.2)
    Traceback (most recent call last):
    TypeError: size must be an integer

Test_5 size parameter is a list
----------------------------------------------
    >>> print_square([1, 2])
    Traceback (most recent call last):
    TypeError: size must be an integer

Test_6 size parameter is a tuple
----------------------------------------------
    >>> print_square((1, 2))
    Traceback (most recent call last):
    TypeError: size must be an integer

Test_7 size parameter is empty
----------------------------------------------
    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
